extends layout

block content
  style.
    .list-group-item {
      border-left: none;
      border-right: none;
      transition: background-color 0.2s;
    }
    .list-group-item:hover {
      background-color: #f8f9fa;
    }
    .list-group-item:first-child {
      border-top: none;
    }
    .list-group-item h6 {
      color: #333;
      margin-bottom: 0.25rem;
    }
    .list-group-item small {
      color: #6c757d;
    }
    .badge {
      font-weight: 500;
    }

  .pb-2.mt-2.mb-4.border-bottom
    h3 
      i.fas.fa-comments.me-2
      | Messages

  .row
    .col-md-4.mb-4
      .card
        .card-header.bg-white.border-bottom-0
          h5.mb-0 Conversations
        #conversationsList.list-group.list-group-flush

    .col-md-8.mb-4
      .card.h-100
        .card-body.d-flex.flex-column.justify-content-center.align-items-center.text-center.text-muted
          i.fas.fa-comments.fa-3x.mb-3
          p Select a conversation to start chatting

block scripts
  script(src='/socket.io/socket.io.js')
  script.
    const socket = io();
    const userId = '#{user._id}';

    // Fetch and display conversations
    async function loadConversations() {
      try {
        const response = await fetch('/api/chat/conversations');
        const data = await response.json();
        
        if (data.success) {
          const conversationsList = document.getElementById('conversationsList');
          conversationsList.innerHTML = '';
          
          data.conversations.forEach(conv => {
            const lastMessage = conv.lastMessage ? conv.lastMessage.content : 'No messages yet';
            const unreadBadge = conv.unreadCount > 0 ? 
              `<span class="badge bg-danger float-end">${conv.unreadCount}</span>` : '';
            
            conversationsList.innerHTML += `
              <a href="/chat?userId=${conv.otherUser._id}" 
                 class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                <div>
                  <h6 class="mb-1">${conv.otherUser.profile.name || 'Anonymous User'}</h6>
                  <small class="text-muted">${lastMessage}</small>
                </div>
                ${unreadBadge}
              </a>
            `;
          });

          if (data.conversations.length === 0) {
            conversationsList.innerHTML = `
              <div class="list-group-item text-center text-muted">
                <p class="mb-0">No conversations yet</p>
                <small>Visit <a href="/donors">Find Donors</a> to start chatting</small>
              </div>
            `;
          }
        }
      } catch (error) {
        console.error('Error loading conversations:', error);
      }
    }

    // Load conversations on page load
    loadConversations();

    // Listen for new messages
    socket.on('new message', (data) => {
      if (data.receiverId === userId) {
        loadConversations();
      }
    }); 